build:
  box: golang:1.10
  base-path: /go/src/github.com/wercker/blueprint
  steps:
    - install-packages:
        packages: curl unzip

    - script:
        name: force "go get" over ssh
        code: git config --global url."git@github.com:".insteadOf "https://github.com/"

    - add-ssh-key:
        keyname: WALTERBOT

    - add-to-known_hosts:
        hostname: github.com
        fingerprint: nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8
        type: rsa

    - script:
        name: install protobuf 3
        code: |
          export PROTOBUF_VERSION=3.6.1
          curl -L https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip > /tmp/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
          cd /tmp
          unzip protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
          export PATH=/tmp/bin:$PATH

    - script:
        name: install dep
        code: go get -u github.com/golang/dep/cmd/dep

    - script:
        name: install dependencies
        code: |
          dep ensure

    - script:
        name: compile
        code: go build

    - script:
        name: init blueprint
        code: |
          rm -rf ./managed
          ./blueprint --non-interactive init service step-registry

    - script:
        name: apply blueprint
        code: |
          touch templates/service/FOO.txt
          ./blueprint apply service step-registry
          [[ -e ./managed/step-registry/FOO.txt ]] || exit 1

    - script:
        name: install protobuf plugins
        code: |
          export PROTOC_GRPC_VERSION=v1.4.1

          go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
          go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger

          mkdir -p $GOPATH/src/github.com/googleapis
          cd $GOPATH/src/github.com/googleapis
          git clone git@github.com:googleapis/googleapis.git

          # Switch to tag
          cd $GOPATH/src/github.com/grpc-ecosystem/grpc-gateway
          git checkout $PROTO_GRPC_VERSION
          cd protoc-gen-grpc-gateway
          go install
          cd ../protoc-gen-swagger
          go install

          go get -u github.com/golang/protobuf/protoc-gen-go
          cd $GOPATH/src/github.com/golang/protobuf
          export PROTOC_GO_VERSION=$(git rev-parse HEAD)

          go get -u github.com/wercker/protoc-gen-flow
          cd $GOPATH/src/github.com/wercker/protoc-gen-flow
          export PROTOC_FLOW_VERSION=$(git rev-parse HEAD)

    - script:
        name: test output
        code: |
          export GENERATOR_PATH=/go/src/github.com/wercker/blueprint/cmd/igenerator
          mv ./managed/step-registry ../step-registry
          cd ../step-registry
          dep ensure
          cd stepregistrypb
          ./generate-protobuf.sh
          cd ../state
          ./generate-stores.sh
          cd ..
          dep ensure --update
          go build
          cp -r ./ $WERCKER_REPORT_ARTIFACTS_DIR/step-registry

# Chain from build or build from source
audit-step:
  box: golang:1.8
  base-path: /go/src/github.com/wercker/blueprint
  steps:
    - script:
        name: force "go get" over ssh
        code: git config --global url."git@github.com:".insteadOf "https://github.com/"

    - add-ssh-key:
        keyname: WALTERBOT

    - add-to-known_hosts:
        hostname: github.com
        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
        type: rsa

    - script:
        name: install govendor
        code: go get -u github.com/kardianos/govendor

    # START stepctl
    # A bunch of stuff to build stepctl since there isn't a step
    # for it yet, this can go away once that is out of the way
    - script:
        cwd: /go/src/github.com/wercker
        name: checkout stepctl
        code: git clone git@github.com:wercker/stepctl

    - script:
        name: stepctl - install dependencies
        cwd: /go/src/github.com/wercker/stepctl
        code: |
          govendor sync

    - script:
        name: stepctl - compile
        cwd: /go/src/github.com/wercker/stepctl
        code: go build

    # END stepctl

    - script:
        name: blueprint - install dependencies
        code: govendor sync

    - script:
        name: audit - compile
        cwd: cmd/audit
        code: go build

    - script:
        name: audit - prune
        cwd: cmd/audit
        code: |
          rm audit.go
          rm audit.sh

    - script:
        name: release step
        cwd: cmd/audit
        code: |
          echo "Releasing to termie/blueprint-audit"
          stepctl=/go/src/github.com/wercker/stepctl/stepctl
          $stepctl publish --auth-token=$WERCKER_AUTH_TOKEN

proto-box:
  box: golang:1.10
  base-path: /go/src/github.com/wercker/blueprint
  steps:
    - install-packages:
        packages: curl unzip

    - script:
        name: force "go get" over ssh
        code: git config --global url."git@github.com:".insteadOf "https://github.com/"

    - add-ssh-key:
        keyname: WALTERBOT

    - add-to-known_hosts:
        hostname: github.com
        fingerprint: nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8
        type: rsa

    - script:
        name: install protobuf 3
        code: |
          export PROTOBUF_VERSION=3.6.1
          curl -L https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip > /tmp/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
          cd /tmp
          mkdir foo
          cd foo
          unzip ../protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
          find . -type f | xargs chmod a+rw
          mv -v include/* /usr/local/include/
          mv -v bin/* /usr/local/bin

    - script:
        name: install protobuf plugins
        code: |
          export PROTOC_GRPC_VERSION=v1.4.1

          go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
          go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger

          # Switch to tag
          cd $GOPATH/src/github.com/grpc-ecosystem/grpc-gateway
          git checkout $PROTO_GRPC_VERSION
          cd protoc-gen-grpc-gateway
          go install
          cd ../protoc-gen-swagger
          go install

          # Get common proto headers
          cd $GOPATH/src/github.com
          mkdir googleapis
          cd googleapis
          git clone git@github.com:googleapis/googleapis.git

          # Build plugins
          go get -u github.com/golang/protobuf/protoc-gen-go
          cd $GOPATH/src/github.com/golang/protobuf
          export PROTOC_GO_VERSION=$(git rev-parse HEAD)

          go get -u github.com/wercker/protoc-gen-flow
          cd $GOPATH/src/github.com/wercker/protoc-gen-flow
          export PROTOC_FLOW_VERSION=$(git rev-parse HEAD)

          echo "protobuf: $PROTOBUF_VERSION"
          echo "protoc-gen-grpc-gateway: $PROTOC_GRPC_VERSION"
          echo "protoc-gen-swagger: $PROTOC_GRPC_VERSION"
          echo "protoc-gen-go: $PROTOC_GO_VERSION"
          echo "protoc-gen-flow: $PROTOC_FLOW_VERSION"

    - bash-template:
        name: generate protoc script
        input: templates/protoc.sh
        output: /protoc.sh

    - script:
        name: make protoc executable
        code: cat /protoc.sh && chmod +x /protoc.sh

    - script:
        name: prune
        code: rm -rf /pipeline /tmp/*

    - internal/docker-push:
        repository: iad.ocir.io/odx-pipelines/wercker/protoc
        tag: "2.0.0"
        registry: https://iad.ocir.io/v2
        username: ${OCIR_USERNAME}
        password: ${OCIR_PASSWORD}
        entrypoint: /protoc.sh

igenerator-push-quay:
  box: golang:1.8
  base-path: /go/src/github.com/wercker/blueprint
  steps:
    - internal/docker-push:
        repository: quay.io/wercker/igenerator
        registry: https://quay.io
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        entrypoint: go run /go/src/github.com/wercker/blueprint/cmd/igenerator/main.go
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT,$WERCKER_GIT_COMMIT,$TPL_IGENERATOR_VERSION
        labels: org.label-schema.vcs-ref=$WERCKER_GIT_COMMIT
